/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package perpustakaan;

import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import static perpustakaan.Perpustakaan.bukuDipinjam;

/**
 *
 * @author Chandra
 */
public class FormPeminjaman extends javax.swing.JFrame {

    ArrayList<BukuDipinjam> bukuDipinjamCollection = new ArrayList<>();

    /**
     * Creates new form FormPeminjaman
     */
    public FormPeminjaman() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        judulBuku = new javax.swing.JTextField();
        tombolCari = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        daftarBuku = new javax.swing.JTable();
        tombolPinjam = new javax.swing.JButton();
        tombolBatal = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        daftarPinjaman = new javax.swing.JTable();
        tombolKonfirmasi = new javax.swing.JButton();
        lama = new javax.swing.JTextField();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        judulBuku.setText("Judul Buku");
        judulBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                judulBukuActionPerformed(evt);
            }
        });

        tombolCari.setText("Cari");
        tombolCari.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tombolCariMouseClicked(evt);
            }
        });
        tombolCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolCariActionPerformed(evt);
            }
        });

        daftarBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(daftarBuku);

        tombolPinjam.setText("Pinjam");
        tombolPinjam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tombolPinjamMouseClicked(evt);
            }
        });

        tombolBatal.setText("Batal");
        tombolBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolBatalActionPerformed(evt);
            }
        });

        daftarPinjaman.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(daftarPinjaman);

        tombolKonfirmasi.setText("Konfirmasi");
        tombolKonfirmasi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tombolKonfirmasiMouseClicked(evt);
            }
        });

        lama.setText("1");
        lama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lamaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tombolKonfirmasi)
                .addGap(24, 24, 24))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(judulBuku, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tombolPinjam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tombolBatal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(tombolCari, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(lama, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(tombolPinjam)
                        .addGap(18, 18, 18)
                        .addComponent(tombolBatal))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(judulBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tombolCari)
                            .addComponent(lama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tombolKonfirmasi)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tombolCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolCariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tombolCariActionPerformed

    private void lamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lamaActionPerformed

    private void tombolCariMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tombolCariMouseClicked
        // TODO add your handling code here:
        String judul = judulBuku.getText();
        Perpustakaan.peminjamanController.cariBuku(judul);
    }//GEN-LAST:event_tombolCariMouseClicked

    private void tombolPinjamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tombolPinjamMouseClicked
        // TODO add your handling code here:
        int lama = Integer.parseInt(this.lama.getText());
        String bukuDipilih = (String) daftarBuku.getModel().getValueAt(daftarBuku.getSelectedRow(), daftarBuku.getSelectedColumn());

        Buku buku = new Buku(bukuDipilih);

        tambahBuku(buku, lama);
    }//GEN-LAST:event_tombolPinjamMouseClicked

    private void tombolKonfirmasiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tombolKonfirmasiMouseClicked
        // TODO add your handling code here:
        pinjam(bukuDipinjamCollection);
    }//GEN-LAST:event_tombolKonfirmasiMouseClicked

    private void judulBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_judulBukuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_judulBukuActionPerformed

    private void tombolBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolBatalActionPerformed
        // TODO add your handling code here:
        String bukuDipilih = (String) daftarPinjaman.getModel().getValueAt(daftarPinjaman.getSelectedRow(), daftarPinjaman.getSelectedColumn());

        BukuDipinjam buku = new BukuDipinjam(bukuDipilih);

        hapusBuku(buku);
    }//GEN-LAST:event_tombolBatalActionPerformed

    public void tampilkan() {
        this.pack();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        this.setVisible(true);

    }

    public void tambahBuku(Buku buku, int lama) {
        if (lama <= 3) {

            Perpustakaan.bukuDipinjam = new BukuDipinjam(buku.getJudul());

            Perpustakaan.bukuDipinjam.setLama(lama);

            this.bukuDipinjamCollection.add(Perpustakaan.bukuDipinjam);

            this.tampilPinjam(this.bukuDipinjamCollection);
        } else {
            Perpustakaan.dialogUI = new DialogUI();
            Perpustakaan.dialogUI.tampilkan("Lama Peminjaman Maksimal 3 Hari");
        }

    }

    public void tampilPinjam(ArrayList<BukuDipinjam> listBuku) {
        //tambah ke tabel pinjaman
        Object[] namaKolom = {"Buku Dipinjam"};
        int jumlahBaris = 0;

        DefaultTableModel model1 = new DefaultTableModel(namaKolom, jumlahBaris);

        Object[] baris = new Object[10];

        for (Buku mauDipinjam : listBuku) {
            model1.addRow(new Object[]{mauDipinjam.getJudul()});
        }
        daftarPinjaman.setModel(model1);

//        DefaultTableModel model2 = new DefaultTableModel(namaKolom, jumlahBaris);
//
//        while (model2.getRowCount() > 0) {
//            for (int i = 0; i < model2.getRowCount(); ++i) {
//                model2.removeRow(i);
//            }
//            daftarPinjaman.setModel(model2);
//        }
    }

    public void tampilPinjamHapus(ArrayList<BukuDipinjam> listBuku) {
        
        Object[] namaKolom = {"Buku Dipinjam"};
        int jumlahBaris = 0;

        Object[] baris = new Object[10];

        DefaultTableModel model2 = (DefaultTableModel) daftarPinjaman.getModel();

        while (model2.getRowCount() > 0) {
            for (int i = 0; i < model2.getRowCount(); ++i) {
                model2.removeRow(i);
            }
            daftarPinjaman.setModel(model2);
        }
    }

    public void hapusBuku(BukuDipinjam buku) {
        Perpustakaan.bukuDipinjam = new BukuDipinjam(buku.getJudul());
        int idx = 0;
        for (Buku xyz : this.bukuDipinjamCollection) {
            if (xyz.getJudul() == buku.getJudul()) {
                this.bukuDipinjamCollection.remove(idx++);
                break;
            }
            idx++;
        }

        this.tampilPinjam(this.bukuDipinjamCollection);
    }

    public void displayBuku(ArrayList<Buku> listBuku) {

        if (listBuku.size() > 0) {
            Object[] namaKolom = {"Judul"};
            int jumlahBaris = 0;

            DefaultTableModel model = new DefaultTableModel(namaKolom, jumlahBaris);

            Object[] baris = new Object[10];

            for (Buku buku : listBuku) {
                model.addRow(new Object[]{buku.getJudul()});
            }

            daftarBuku.setModel(model);
        } else {
            Perpustakaan.dialogUI = new DialogUI();
            Perpustakaan.dialogUI.tampilkan("Buku Tidak Ditemukan");
        }
    }

    public void pinjam(ArrayList<BukuDipinjam> bukuDipinjam) {
        Perpustakaan.peminjamanManager = new PeminjamanManager();
        Perpustakaan.dialogUI = new DialogUI();

        if (Perpustakaan.peminjamanManager.save(bukuDipinjam)) {
            Perpustakaan.dialogUI.tampilkan("Peminjaman Telah Dikonfirmasi");
        } else {
            Perpustakaan.dialogUI.tampilkan("Peminjaman Gagal");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormPeminjaman.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormPeminjaman.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormPeminjaman.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormPeminjaman.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormPeminjaman().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable daftarBuku;
    private javax.swing.JTable daftarPinjaman;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField judulBuku;
    private javax.swing.JTextField lama;
    private javax.swing.JButton tombolBatal;
    private javax.swing.JButton tombolCari;
    private javax.swing.JButton tombolKonfirmasi;
    private javax.swing.JButton tombolPinjam;
    // End of variables declaration//GEN-END:variables
}
